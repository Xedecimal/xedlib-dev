<?php
require_once dirname(__FILE__) . '/../../../../lib/classes/present/template.php';

/**
 * Test class for Template.
 * Generated by PHPUnit on 2010-11-18 at 21:34:01.
 */
class TemplateTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var Template
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$data['test'] = 'value';
		$this->object = new Template($data);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	public function testTemplate()
	{
		$temp = <<<EOF
<html doctype="trans">
<head>
<title>Title Here</title>
</head>
<body>
<!-- Comment Here! -->
Here's some content. {{Test}} {{Test2}}
<box title="Test">
Body From object: {{Arg}}
</box>
<template file="temp_sub.xml" />
<?php echo "And some code!"; ?>
<nempty var="{{Test}}">This is not empty</nempty>
</body>
</html>
EOF;
		$temp_sub = <<<EOF
<p>Here's a sub-template.
</p>
EOF;
		file_put_contents('temp.xml', $temp);
		file_put_contents('temp_sub.xml', $temp_sub);
		$t = new Template();
		$t->ReWrite('nempty', array(&$t, 'TagNEmpty'));
		$t->Set('Test', 'value');
		$t->Set(array('Test2' => 'test2'));
		$obj = new stdClass();
		$obj->Arg = 'val';
		$t->Set($obj);
		$t->Transform('p', array(&$this, 'TransP'));
		$t->ParseFile('temp.xml');
		unlink('temp.xml');
		unlink('temp_sub.xml');
	}

	public function TransP($a)
	{
		$a['attribs']['ID'] = 'test';
		return $a;
	}
}

?>
